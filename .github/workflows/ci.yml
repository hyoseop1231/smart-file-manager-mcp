name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r ai-services/requirements.txt
        pip install pytest pytest-cov
    
    - name: Run tests
      run: |
        cd ai-services
        python -m pytest --cov=. --cov-report=xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./ai-services/coverage.xml
        flags: unittests
        name: codecov-umbrella

  docker-build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build AI Services Docker image
      run: |
        docker build -t smart-file-manager:latest ./ai-services
    
    - name: Build MCP Server Docker image
      run: |
        docker build -t smart-file-mcp-server:latest ./mcp-server
    
    - name: Test Docker Compose
      run: |
        docker-compose -f docker-compose.yml config

  security-scan:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
    
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'trivy-results.sarif'

  release:
    runs-on: ubuntu-latest
    needs: [test, docker-build, security-scan]
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Smart File Manager MCP ${{ github.ref }}
        body: |
          ## Changes in this release
          - See commit history for detailed changes
          
          ## Installation
          ```bash
          git clone https://github.com/hyoseop1231/smart-file-manager-mcp.git
          cd smart-file-manager-mcp
          ./deploy.sh
          ```
          
          ## Docker Hub Images
          - `smart-file-manager:${{ github.ref }}`
          - `smart-file-mcp-server:${{ github.ref }}`
        draft: false
        prerelease: false